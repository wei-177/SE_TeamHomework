<font size=5>二、原型改进与需求深化</font>
1、原型改进
1.1 原型展示
为了更直观地理解需求并收集目标用户的反馈，我们计划制作一个初步的游戏原型。这个原型将包括：

基本界面：展示角色信息（如生命值、攻击力、防御力等）、当前楼层信息、战斗日志和菜单等。
楼层设计：初步设计几个楼层，每个楼层包含不同的敌人、资源和宝物，以展示游戏的多样性和挑战性。
战斗系统：实现一个简单的战斗界面，展示角色与敌人之间的战斗过程，包括损耗的血量和战斗结果。
存档与读档：实现基本的存档和读档功能，确保玩家可以保存和恢复游戏进度。
1.2 用户反馈收集
将原型展示给目标用户，特别是魔塔类社区玩家，收集他们的反馈和意见。通过问卷调查、面对面访谈等方式，了解他们对游戏机制、界面设计、楼层布局、敌人难度等方面的看法，并根据反馈进行必要的调整和改进。

1.3 需求深化
根据用户反馈，进一步细化需求，包括：

调整游戏难度：根据用户的意见，调整敌人的数值和分布，以确保游戏既具有挑战性又不过于困难。
优化界面设计：根据用户的喜好和习惯，优化游戏界面的布局和颜色搭配，提高游戏的可玩性和舒适度。
增加特色元素：根据用户的建议，增加一些特色元素，如隐藏关卡、特殊道具等，以增加游戏的趣味性和吸引力。
<font size=5>三、架构设计、WBS与任务时间估计</font>
1、架构设计
我们计划采用模块化架构来设计游戏，将游戏分为不同的模块，如界面模块、战斗模块、楼层管理模块等。每个模块都负责特定的功能，并与其他模块进行交互。这种架构有助于提高代码的可读性、可维护性和可扩展性。

2、WBS（工作分解结构）
根据架构设计，我们将游戏开发过程分解为以下主要任务：

界面设计：包括主菜单、角色信息界面、战斗界面等的设计和实现。
战斗系统：实现角色与敌人之间的战斗逻辑和结果计算。
楼层管理：设计和管理不同楼层的布局、敌人分布和资源位置。
数据存储：实现游戏的存档和读档功能。
音效与音乐：为游戏添加音效和音乐。
测试与调试：对游戏进行全面的测试，确保各个模块的功能正常并修复发现的问题。
3、团队成员任务时间估计
假设每个任务都需要一定的时间来完成，并且团队成员之间的分工如下：

梁志聪：负责界面设计和音效与音乐的添加，预计需要3个月的时间。
曾繁曦：负责战斗系统和楼层管理的实现，预计需要4个月的时间。
李永杰：负责数据存储和测试与调试工作，预计需要3个月的时间。
考虑到团队之间的协作和沟通时间，以及可能遇到的技术问题和需求变更，我们计划为整个项目预留1个月的缓冲时间。因此，整个项目的预计开发周期为11个月。

<font size=5>四、测试计划</font>
1、测试目标
确保游戏的功能正常、性能稳定、用户体验良好，并修复所有发现的问题。

2、测试策略
我们计划采用以下测试策略：

功能测试：对每个模块的功能进行逐一测试，确保它们按照预期工作。
性能测试：测试游戏的运行速度和资源消耗情况，确保游戏在目标设备上能够流畅运行。
用户体验测试：邀请目标用户进行试玩，并收集他们的反馈和意见，以评估游戏的用户体验。
兼容性测试：测试游戏在不同设备和操作系统上的兼容性情况。
3、测试资源
测试环境：包括目标设备（如电脑、手机等）和操作系统（如Windows、macOS、Android等）。
测试工具：使用Godot引擎自带的调试工具和第三方测试工具进行性能测试和兼容性测试。
测试人员：团队成员和部分目标用户将参与测试工作。
4、测试计划表
测试阶段	测试内容	测试人员	预计时间
功能测试	各个模块的功能测试	团队成员	2天
性能测试	游戏运行速度和资源消耗测试	团队成员	1天
用户体验测试	目标用户试玩并收集反馈	目标用户	1天
兼容性测试	不同设备和操作系统上的兼容性测试	团队成员	1天
问题修复与回归测试	修复发现的问题并进行回归测试	团队成员	1天

通过详细的测试计划，我们可以确保游戏在发布前经过充分的测试，以提高游戏的质量和用户体验。
